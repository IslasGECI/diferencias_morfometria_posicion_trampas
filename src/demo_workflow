#!/usr/bin/env bash
#
position_trap_file_name_xlsx=${1}
files_path=$(dirname ${position_trap_file_name_xlsx})
position_trap_file_name=$(basename ${position_trap_file_name_xlsx} .xlsx)
position_trap_data_file=${files_path}/${position_trap_file_name}
cat_morphometry_file_name_xlsx=${2}
cat_morphometry_data_path=$(dirname ${cat_morphometry_file_name_xlsx})
cat_morphometry_file_name=$(basename ${cat_morphometry_file_name_xlsx} .xlsx)
cat_morphometry_data_file=${cat_morphometry_data_path}/${cat_morphometry_file_name}
datapackage_validation_file="posicion_trampas_gatos_ig"
dtp_src="data/validacion_datapackage"
src_path="src"
mkdir ${dest_path} --parents
# Revisión estructural de la tabla posición trampa
# 1. Recibimos los datos
# 2. Encontrar duplicados
	echo "BUSCANDO DUPLICADOS"
	${src_path}/distinct_position_traps ${position_trap_file_name_xlsx}


# 3. Revisar nombres de las columnas
	echo "REVISANDO EL ENCABEZADO"
	${src_path}/make_check_header.R --data ${position_trap_data_file}.csv

# 4. Validacion con datapackage
    #Cambiamos el encabezado del archivo CSV para correr en la carpeta 'validacion_datapackage' el goodtables
	${src_path}/change_header ${position_trap_data_file}.csv \
		> ${dtp_src}/${datapackage_validation_file}.csv
	# Corre goodtables en la carpeta 'validacion_datapackage'
	echo "VERIFICACIÓN ESTRUCTURAL"
	goodtables ${dtp_src}/datapackage.json


# Revisa y compara las capturas de los archivos posición trampas y morfometría gatos
# 5. Hacerlos tidy (feature/agrega_script_con_cli)
	echo "CONVIERTE TABLA A FORMATO TIDY Y CAMBIA FORMATO DE FECHA"
	src/make_table_tidy.R \
		--data ${position_trap_data_file}.csv \
		--salida ${position_trap_data_file}_tidy.csv \
	&& cambia_formato_fecha ${position_trap_data_file}_tidy.csv \
		> ${position_trap_data_file}.csv

# 6. Limpiar archivos
# 6.1 Morfometría
# Convierte archivo de morfometría_gatos de xslx a csv
	echo "CONVIERTE ARCHIVO DE MORFOMETRIA DE XLSX A CSV"
	./src/xlsx_2_csv ${cat_morphometry_file_name_xlsx} \
	&& cambia_formato_fecha ${cat_morphometry_data_file}.csv \
		> ${cat_morphometry_data_file}_ISO8601.csv

# Tiene que ser la salida de la funcion cambia formato_fecha (ISO8601)
	src/clean_morphometry.R \
    	--data=${cat_morphometry_data_file}_ISO8601.csv \
    	--out=${files_path}/cleaned_morphometry_cats.csv
# 6.2 Posición trampa
	src/get_captures.R \
		--data=${position_trap_data_file}.csv \
		--out=${files_path}/cleaned_position_traps.csv
# 7. Comparar morfometría con posicion (Capturas que no están en morfometría)
# 	>$@ Salida estándar
    src/show_diff_morphometry_position.R \
		--data_1=${files_path}/cleaned_position_traps.csv \
		--data_2=${files_path}/cleaned_morphometry_cats.csv \
		> ${files_path}/missing_captures_in_position.csv
# 8. Comparar posicion con morfometría (Capturas que no están en posición)
    src/show_diff_morphometry_position.R \
		--data_1=${files_path}/cleaned_morphometry_cats.csv \
        --data_2=${files_path}/cleaned_position_traps.csv \
		> ${files_path}/missing_captures_in_morfometry.csv
# 9. Consignamos (pre-commit)
	# El precommit verifica que los archivos missing_captures_in_position.csv y 
	# missing_captures_in_morfometry estén vacios para poder consignar IG_POSICION_TRAMPAS_10MAY2020.csv

# 10. Query para separar por zonas

# 11. Sacamos resumen

# 12. Agregar resumen semanal a base de datos mayor